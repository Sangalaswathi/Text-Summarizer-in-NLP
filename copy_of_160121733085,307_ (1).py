# -*- coding: utf-8 -*-
"""Copy of 160121733085,307 .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YpFLxG7YyDxDrs_VOfqH4wUV4eunAKPs
"""

import nltk

import nltk
from nltk.tokenize import sent_tokenize, word_tokenize
from nltk.corpus import stopwords
from collections import Counter

nltk.download('punkt')
nltk.download('stopwords')

def text_summarizer(text, num_sentences=3):
    # Tokenize the text into sentences
    sentences = sent_tokenize(text)

    # Tokenize each sentence into words
    words = [word_tokenize(sentence.lower()) for sentence in sentences]

    # Remove stopwords
    stop_words = set(stopwords.words('english'))
    filtered_words = []
    for sentence in words:
        filtered_words.append([word for word in sentence if word not in stop_words])

    # Flatten the list of words
    flattened_words = [word for sublist in filtered_words for word in sublist]

    # Calculate word frequency
    word_freq = Counter(flattened_words)

    # Calculate sentence scores based on word frequency
    sentence_scores = {sentence: sum(word_freq[word] for word in word_tokenize(sentence.lower()))
                       for sentence in sentences}

    # Sort sentences by score and select the top ones
    top_sentences = sorted(sentence_scores, key=sentence_scores.get, reverse=True)[:num_sentences]

    # Join the top sentences to form the summary
    summary = ' '.join(top_sentences)

    return summary

if __name__ == "__main__":
    # Example text
    text = """
    Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017. Under his captaincy, India has reached several milestones including becoming the number-one team in Test cricket and reaching the final of the 2017 ICC Champions Trophy. He has also been honoured with several awards for his performances including the Sir Garfield Sobers Trophy for ICC ODI Player of the Year in 2017 and 2018. He is known for his aggressive captaincy and his never-say-die attitude on the field.
    """

    # Generate summary
    summary = text_summarizer(text)
    print("Summary:")
    print(summary)

import nltk
nltk.download('punkt')

import nltk
from nltk.tokenize import sent_tokenize, word_tokenize
from nltk.corpus import stopwords
from nltk.probability import FreqDist

# Sample text
text = """
 Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017. Under his captaincy, India has reached several milestones including becoming the number-one team in Test cricket and reaching the final of the 2017 ICC Champions Trophy. He has also been honoured with several awards for his performances including the Sir Garfield Sobers Trophy for ICC ODI Player of the Year in 2017 and 2018. He is known for his aggressive captaincy and his never-say-die attitude on the field.
"""

# Tokenize the text into sentences
sentences = sent_tokenize(text)

# Tokenize each sentence into words
words = [word_tokenize(sentence.lower()) for sentence in sentences]

# Remove stopwords
stop_words = set(stopwords.words('english'))
filtered_words = []
for sentence in words:
    filtered_words.append([word for word in sentence if word not in stop_words])

# Flatten the list of words
flattened_words = [word for sublist in filtered_words for word in sublist]

# Calculate word frequency
word_freq = FreqDist(flattened_words)

# Calculate sentence scores based on word frequency
sentence_scores = {sentence: sum(word_freq[word] for word in word_tokenize(sentence.lower()))
                   for sentence in sentences}

# Sort sentences by score and select the top ones
num_sentences = 2  # Number of sentences in the summary
top_sentences = sorted(sentence_scores, key=sentence_scores.get, reverse=True)[:num_sentences]

# Join the top sentences to form the summary
summary = ' '.join(top_sentences)

# Print the summary
print("Summary:")
print(summary)

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize,sent_tokenize

import nltk
nltk.download('stopwords')
nltk.download('punkt')

text = """Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017. Under his captaincy, India has reached several milestones including becoming the number-one team in Test cricket and reaching the final of the 2017 ICC Champions Trophy. He has also been honoured with several awards for his performances including the Sir Garfield Sobers Trophy for ICC ODI Player of the Year in 2017 and 2018. He is known for his aggressive captaincy and his never-say-die attitude on the field."""

import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

# Assuming you're using English stopwords
stopwords_en = set(stopwords.words('english'))

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize

# Assuming you have some text stored in the variable 'text'
text = " Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017. Under his captaincy, India has reached several milestones including becoming the number-one team in Test cricket and reaching the final of the 2017 ICC Champions Trophy. He has also been honoured with several awards for his performances including the Sir Garfield Sobers Trophy for ICC ODI Player of the Year in 2017 and 2018. He is known for his aggressive captaincy and his never-say-die attitude on the field"


# Tokenize the text into words
words = word_tokenize(text)

# Load English stopwords
stopwords_en = set(stopwords.words('english'))

# Remove stopwords from the text
filtered_words = [word for word in words if word.lower() not in stopwords_en]

# Join the filtered words back into a sentence
filtered_text = ' '.join(filtered_words)

print("Original text:")
print(text)
print("\nText after removing stopwords:")
print(filtered_text)

words = word_tokenize(text)
print(words)

freqTable = dict()

freqTable = dict()
for word in words:
    word = word.lower()
    if word in stopwords_en:
        continue
    if word in freqTable:
        freqTable[word] += 1
    else:
        freqTable[word] = 1

print(freqTable)

sentences = sent_tokenize(text)
print(sentences)

def getsentenceValue():
  sentenceValue = dict()
  for sentence in sentences:
    for word, freq in freqTable.items():
        if word in sentence.lower():
            if sentence in sentenceValue:
                sentenceValue[sentence] += freq
            else:
                sentenceValue [sentence] = freq
  return sentenceValue
  print(sentenceValue)
sentenceValue = getsentenceValue()
print(sentenceValue)

def get_average_value(sentenceValue):
    sum_values = 0
    for sentence in sentenceValue:
        sum_values += sentenceValue[sentence]
    average = sum_values / len(sentenceValue)
    return average
sentenceValue = {"sentence1": 5, "sentence2": 8, "sentence3": 3}  # Example data

average = get_average_value(sentenceValue)
print(average)

# Assuming sentences, sentenceValue, and average are properly defined
summary = ''
for sentence in sentences:
    if sentence in sentenceValue and sentenceValue[sentence] > (1.4 * average):
        summary += " " + sentence

print(summary)

160*1.2

import spacy
from spacy.lang.en.stop_words import STOP_WORDS
import string

# Define the text
text = """Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017. Under his captaincy, India has reached several milestones including becoming the number-one team in Test cricket and reaching the final of the 2017 ICC Champions Trophy. He has also been honoured with several awards for his performances including the Sir Garfield Sobers Trophy for ICC ODI Player of the Year in 2017 and 2018. He is known for his aggressive captaincy and his never-say-die attitude on the field.."""

# Load English tokenizer, tagger, parser, NER and word vectors
nlp = spacy.load("en_core_web_sm")
# Process the text
doc = nlp(text)

# Define punctuation and stopwords
punctuations = string.punctuation
stopwords = list(STOP_WORDS)

# Word frequency
word_freq = {}
for word in doc:
    if word.text.lower() not in stopwords and word.text.lower() not in punctuations:
        if word.text.lower() not in word_freq.keys():
            word_freq[word.text.lower()] = 1
        else:
            word_freq[word.text.lower()] += 1

# Maximum frequency
max_freq = max(word_freq.values())

# Normalize word frequency
for word in word_freq.keys():
    word_freq[word] = word_freq[word] / max_freq

# Sentence scoring
sent_scores = {}
for sent in doc.sents:
    for word in sent:
        if word.text.lower() in word_freq.keys():
            if sent not in sent_scores.keys():
                sent_scores[sent] = word_freq[word.text.lower()]
            else:
                sent_scores[sent] += word_freq[word.text.lower()]

# Selecting the top sentences for summary
select_len = int(len(sent_scores) * 0.3)  # Select top 30% of sentences
summary = sorted(sent_scores, key=sent_scores.get, reverse=True)[:select_len]

# Print the summary
final_summary = [sent.text for sent in summary]
final_summary = ' '.join(final_summary)

print("Original text length:", len(text.split()))
print("Summary length:", len(final_summary.split()))
print("\nSummary:\n", final_summary)

import requests
from bs4 import BeautifulSoup
import os.path
from dateutil import parser
import pandas as pd
import numpy as np

def download_article(url):
    # check if article already there
    filename = url.split("/")[-1] + ".html"
    filename = f"{BASE_DIR}/ch09/" + filename
    if not os.path.isfile(filename):
        r = requests.get(url)
        with open(filename, "w+") as f:
            f.write(r.text)
    return filename

def parse_article(article_file):
    with open(article_file, "r") as f:
        html = f.read()
    r = {}
    soup = BeautifulSoup(html, 'html.parser')
    r['id'] = soup.select_one("div.StandardArticle_inner-container")['id']
    r['url'] = soup.find("link", {'rel': 'canonical'})['href']
    r['headline'] = soup.h1.text
    r['section'] = soup.select_one("div.ArticleHeader_channel a").text

    r['text'] = soup.select_one("div.StandardArticleBody_body").text
    r['authors'] = [a.text
                    for a in soup.select("div.BylineBar_first-container.ArticleHeader_byline-bar\
                                          div.BylineBar_byline span")]
    r['time'] = soup.find("meta", { 'property': "og:article:published_time"})['content']
    return r

!pip install gensim
!pip install nltk

!pip show gensim

import nltk
nltk.download('punkt')

"""Abstractive Text Summarization - Transformer Model.ipynb"""

!pip install transformers==2.8.0
!pip install torch==1.4.0

import torch
from transformers import T5Tokenizer, T5ForConditionalGeneration, T5Config

# initialize the pretrained model
model = T5ForConditionalGeneration.from_pretrained('t5-small')
tokenizer = T5Tokenizer.from_pretrained('t5-small')
device = torch.device('cpu')

# input text
text = """Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017. Under his captaincy, India has reached several milestones including becoming the number-one team in Test cricket and reaching the final of the 2017 ICC Champions Trophy. He has also been honoured with several awards for his performances including the Sir Garfield Sobers Trophy for ICC ODI Player of the Year in 2017 and 2018. He is known for his aggressive captaincy and his never-say-die attitude on the field.

"""

## preprocess the input text
preprocessed_text = text.strip().replace('\n','')
t5_input_text = 'summarize: ' + preprocessed_text

t5_input_text

len(t5_input_text.split())

from transformers import T5Tokenizer

# Assuming you're using the T5 tokenizer
tokenizer = T5Tokenizer.from_pretrained("t5-small")
device = "cuda" if torch.cuda.is_available() else "cpu"  # Checking if GPU is available

# Input text
t5_input_text = "Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017."

# Tokenize the input text
tokenized_text = tokenizer.encode(t5_input_text, return_tensors='pt', max_length=160).to(device)

"""Summarize"""

from transformers import T5ForConditionalGeneration, T5Tokenizer

# Initialize the model and tokenizer
model = T5ForConditionalGeneration.from_pretrained("t5-small")
tokenizer = T5Tokenizer.from_pretrained("t5-small")

# Input text
t5_input_text = "Virat Kohli is an Indian cricketer and former captain of the Indian national team. He is considered one of the best batsmen in the world and holds several records in cricket. He made his international debut in 2008 and has since then represented India in all three formats of the game. He has been a consistent performer for India and has been the backbone of the Indian batting line-up. In 2013, he was appointed as the vice-captain of the ODI team and became the captain of the team in 2017. Under his captaincy, India has reached several milestones including becoming the number-one team in Test cricket and reaching the final of the 2017 ICC Champions Trophy. He has also been honoured with several awards for his performances including the Sir Garfield Sobers Trophy for ICC ODI Player of the Year in 2017 and 2018."

# Tokenize the input text with truncation enabled
tokenized_text = tokenizer.encode(t5_input_text, return_tensors='pt', max_length=512, truncation=True)

# Generate the summary
summary_ids = model.generate(tokenized_text, min_length=30, max_length=120)
summary = tokenizer.decode(summary_ids[0], skip_special_tokens=True)

# Print the generated summary
print(summary)

